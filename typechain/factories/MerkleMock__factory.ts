/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleMock } from "../MerkleMock";

export class MerkleMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleMock> {
    return super.deploy(overrides || {}) as Promise<MerkleMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleMock {
    return super.attach(address) as MerkleMock;
  }
  connect(signer: Signer): MerkleMock__factory {
    return super.connect(signer) as MerkleMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleMock {
    return new Contract(address, _abi, signerOrProvider) as MerkleMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "computeHash",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635a9a49c71461003b57806363d6bfac146100c5575b600080fd5b6100b16004803603606081101561005157600080fd5b81019060208101813564010000000081111561006c57600080fd5b82018360208201111561007e57600080fd5b803590602001918460208302840111640100000000831117156100a057600080fd5b9193509150803590602001356101ba565b604080519115158252519081900360200190f35b61016a600480360360408110156100db57600080fd5b8101906020810181356401000000008111156100f657600080fd5b82018360208201111561010857600080fd5b8035906020019184602083028401116401000000008311171561012a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250610205915050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101a657818101518382015260200161018e565b505050509050019250505060405180910390f35b60006101fc8585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508691506102eb9050565b95945050505050565b60408051600a808252610160820190925260609183918391602082016101408036833701905050905060005b85518110156102e257600086828151811061024857fe5b6020026020010151905080841161028f57838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093506102c1565b808460405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b838383815181106102ce57fe5b602090810291909101015250600101610231565b50949350505050565b600081815b855181101561038957600086828151811061030757fe5b6020026020010151905080831161034e5782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610380565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b506001016102f0565b50909214939250505056fea26469706673582212200ab049fdd2a8f5690593e07a99ca2856e40c82d435a978b3c7747f3cfd14d2c464736f6c634300060c0033";
