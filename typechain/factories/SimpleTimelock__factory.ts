/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SimpleTimelock } from "../SimpleTimelock";

export class SimpleTimelock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SimpleTimelock> {
    return super.deploy(overrides || {}) as Promise<SimpleTimelock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleTimelock {
    return super.attach(address) as SimpleTimelock;
  }
  connect(signer: Signer): SimpleTimelock__factory {
    return super.connect(signer) as SimpleTimelock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleTimelock {
    return new Contract(address, _abi, signerOrProvider) as SimpleTimelock;
  }
}

const _abi = [
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610906806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631794bb3c1461005c57806338af3eed1461009457806386d1a69f146100b8578063b91d4001146100c0578063fc0c546a146100da575b600080fd5b6100926004803603606081101561007257600080fd5b506001600160a01b038135811691602081013590911690604001356100e2565b005b61009c610192565b604080516001600160a01b039092168252519081900360200190f35b6100926101a1565b6100c86102c3565b60408051918252519081900360200190f35b61009c6102c9565b600054610100900460ff16806100fb57506100fb6102de565b80610109575060005460ff16155b6101445760405162461bcd60e51b815260040180806020018281038252602e815260200180610824602e913960400191505060405180910390fd5b600054610100900460ff1615801561016f576000805460ff1961ff0019909116610100171660011790555b61017a8484846102e4565b801561018c576000805461ff00191690555b50505050565b6001546001600160a01b031690565b6002544210156101e25760405162461bcd60e51b81526004018080602001828103825260328152602001806107cc6032913960400191505060405180910390fd5b60008054604080516370a0823160e01b81523060048201529051620100009092046001600160a01b0316916370a0823191602480820192602092909190829003018186803b15801561023357600080fd5b505afa158015610247573d6000803e3d6000fd5b505050506040513d602081101561025d57600080fd5b505190508061029d5760405162461bcd60e51b81526004018080602001828103825260238152602001806108ae6023913960400191505060405180910390fd5b6001546000546102c0916001600160a01b0362010000909204821691168361037c565b50565b60025490565b6000546201000090046001600160a01b031690565b303b1590565b600054610100900460ff16806102fd57506102fd6102de565b8061030b575060005460ff16155b6103465760405162461bcd60e51b815260040180806020018281038252602e815260200180610824602e913960400191505060405180910390fd5b600054610100900460ff16158015610371576000805460ff1961ff0019909116610100171660011790555b61017a8484846103d3565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103ce9084906104fb565b505050565b600054610100900460ff16806103ec57506103ec6102de565b806103fa575060005460ff16155b6104355760405162461bcd60e51b815260040180806020018281038252602e815260200180610824602e913960400191505060405180910390fd5b600054610100900460ff16158015610460576000805460ff1961ff0019909116610100171660011790555b42821161049e5760405162461bcd60e51b815260040180806020018281038252603281526020018061087c6032913960400191505060405180910390fd5b6000805462010000600160b01b031916620100006001600160a01b038781169190910291909117909155600180546001600160a01b0319169185169190911790556002829055801561018c576000805461ff001916905550505050565b6060610550826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105ac9092919063ffffffff16565b8051909150156103ce5780806020019051602081101561056f57600080fd5b50516103ce5760405162461bcd60e51b815260040180806020018281038252602a815260200180610852602a913960400191505060405180910390fd5b60606105bb84846000856105c5565b90505b9392505050565b6060824710156106065760405162461bcd60e51b81526004018080602001828103825260268152602001806107fe6026913960400191505060405180910390fd5b61060f85610721565b610660576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061069f5780518252601f199092019160209182019101610680565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610701576040519150601f19603f3d011682016040523d82523d6000602084013e610706565b606091505b5091509150610716828286610727565b979650505050505050565b3b151590565b606083156107365750816105be565b8251156107465782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610790578181015183820152602001610778565b50505050905090810190601f1680156107bd5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206265666f72652063757272656e742074696d65546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365a264697066735822122013be466f40c8d8e6b5cbdbc093c597ab1c0fc41e3ac20138f49700a48f4cccde64736f6c634300060c0033";
