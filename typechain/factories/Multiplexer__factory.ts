/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Multiplexer } from "../Multiplexer";

export class Multiplexer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Multiplexer> {
    return super.deploy(overrides || {}) as Promise<Multiplexer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Multiplexer {
    return super.attach(address) as Multiplexer;
  }
  connect(signer: Signer): Multiplexer__factory {
    return super.connect(signer) as Multiplexer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multiplexer {
    return new Contract(address, _abi, signerOrProvider) as Multiplexer;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "InsufficientFundsForRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "RootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "RootValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_PROPOSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_VALIDATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNPAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "approveRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeStAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeStAmounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
    ],
    name: "encodeClaim",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getClaimedFor",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentMerkleData",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Multiplexer.MerkleData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingMerkleData",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Multiplexer.MerkleData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPendingRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialProposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialValidator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProposedMerkleData",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPublishedMerkleData",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "proposeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506124fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80639010d07c116100f9578063ca15c87311610097578063d547741f11610071578063d547741f14610383578063e63ab1e914610396578063ef5d9ae81461039e578063fb1bb9de146103b1576101c4565b8063ca15c87314610355578063cbf2218914610368578063d12ed8971461037b576101c4565b8063a2fcfd68116100d3578063a2fcfd6814610311578063b20cd55514610332578063b52086ee1461033a578063c0c53b8b14610342576101c4565b80639010d07c146102d657806391d14854146102f6578063a217fddf14610309576101c4565b80633f4ba83a116101665780635c975abb116101405780635c975abb1461029d5780636f0f3cb3146102a55780638456cb59146102c6578063897347bb146102ce576101c4565b80633f4ba83a1461026a57806342a9b9c6146102725780635634961d1461028a576101c4565b8063248a9ca3116101a2578063248a9ca31461021c5780632f2ff15d1461022f5780632f37a7741461024257806336568abe14610257576101c4565b806307bda9c3146101c95780630c9cbf0e146101de5780630d4202ce14610207575b600080fd5b6101dc6101d7366004611b52565b6103b9565b005b6101f16101ec366004611977565b6107cd565b6040516101fe9190611f05565b60405180910390f35b61020f6107ea565b6040516101fe9190612413565b6101f161022a366004611c3d565b61081f565b6101dc61023d366004611c55565b610834565b61024a61087c565b6040516101fe9190611efa565b6101dc610265366004611c55565b610896565b6101dc6108d8565b61027a6108ea565b6040516101fe9493929190611f0e565b6101dc610298366004611c8f565b6108f9565b61024a6109ea565b6102b86102b3366004611aa1565b6109f3565b6040516101fe929190611f29565b6101dc610a3e565b61027a610a4e565b6102e96102e4366004611cc0565b610a5d565b6040516101fe9190611de0565b61024a610304366004611c55565b610a7e565b6101f1610a96565b61032461031f3660046119f0565b610a9b565b6040516101fe929190611e6c565b61020f610b70565b6101f1610ba5565b6101dc6103503660046119ab565b610bc9565b6101f1610363366004611c3d565b610cbe565b6101dc610376366004611c8f565b610cd5565b6101f1610dec565b6101dc610391366004611c55565b610e10565b6101f1610e4a565b6101f16103ac36600461195c565b610e6e565b6101f1610e80565b60655460ff16156103e55760405162461bcd60e51b81526004016103dc9061213d565b60405180910390fd5b609d5483146104065760405162461bcd60e51b81526004016103dc90612246565b600033848b8b8b8b8b8b604051602001610427989796959493929190611df4565b60405160208183030381529060405280519060200120905061048083838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050609b549150849050610ea4565b61049c5760405162461bcd60e51b81526004016103dc9061232a565b508560005b818110156106375760008b8b838181106104b757fe5b90506020020160208101906104cc919061195c565b905060008a8a848181106104dc57fe5b336000908152609f602090815260408083206001600160a01b0389168452825282205492029390930135935061051491508390610f43565b9050600081116105365760405162461bcd60e51b81526004016103dc906122a4565b336000908152609f602090815260408083206001600160a01b03871684529091529020546105649082610f85565b336000908152609f602090815260408083206001600160a01b0388168452909152902081905582146105a85760405162461bcd60e51b81526004016103dc9061226d565b6105bc6001600160a01b0384163383610faa565b878e8e868181106105c957fe5b90506020020160208101906105de919061195c565b6001600160a01b0316336001600160a01b03167f6f9c9826be5976f3f82a3490c52a83328ce2ec7be9e62dcb39c26da5148d7c768442436040516106249392919061243e565b60405180910390a45050506001016104a1565b508460005b818110156107bf5760008c8c83860181811061065457fe5b9050602002016020810190610669919061195c565b9050600089898481811061067957fe5b336000908152609f602090815260408083206001600160a01b038916845282528220549202939093013593506106b191508390610f43565b9050600081116106d35760405162461bcd60e51b81526004016103dc906122a4565b336000908152609f602090815260408083206001600160a01b03871684529091529020546107019082610f85565b336000908152609f602090815260408083206001600160a01b0388168452909152902081905582146107455760405162461bcd60e51b81526004016103dc9061226d565b610764336107538584611005565b6001600160a01b0386169190610faa565b88836001600160a01b0316336001600160a01b03167f6f9c9826be5976f3f82a3490c52a83328ce2ec7be9e62dcb39c26da5148d7c768442436040516107ac9392919061243e565b60405180910390a450505060010161063c565b505050505050505050505050565b609f60209081526000928352604080842090915290825290205481565b6107f26118dc565b50604080516080810182526097548152609854602082015260995491810191909152609a54606082015290565b60009081526033602052604090206002015490565b60008281526033602052604090206002015461085290610304611106565b61086e5760405162461bcd60e51b81526004016103dc90611fa0565b610878828261110a565b5050565b609d5460009061088d906001610f85565b60995414905090565b61089e611106565b6001600160a01b0316816001600160a01b0316146108ce5760405162461bcd60e51b81526004016103dc906123c4565b6108788282611173565b6108e06111dc565b6108e8611222565b565b609754609854609954609a5484565b60655460ff161561091c5760405162461bcd60e51b81526004016103dc9061213d565b61092461128e565b609d54610932906001610f85565b82146109505760405162461bcd60e51b81526004016103dc90612351565b601e61095c4383610f43565b1015801561096b5750609a5481115b61097457600080fd5b6040805160808101825285815260208101859052808201849052606001829052609785905560988490556099839055609a829055517f4f5e6379f7e52c1faee63fa2c3adaf4a671bdb2b34c1a1a3f79b6681bb255e7f906109dc908490879087908690611f0e565b60405180910390a150505050565b60655460ff1690565b6060600083838b8b8b8b8b8b604051602001610a16989796959493929190611df4565b6040516020818303038152906040529150818051906020012090509850989650505050505050565b610a466112d4565b6108e86112fe565b609b54609c54609d54609e5484565b6000828152603360205260408120610a759083611357565b90505b92915050565b6000828152603360205260408120610a759083611363565b600081565b6060806060835167ffffffffffffffff81118015610ab857600080fd5b50604051908082528060200260200182016040528015610ae2578160200160208202803683370190505b50905060005b8451811015610b62576001600160a01b0386166000908152609f602052604081208651909190879084908110610b1a57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b4f57fe5b6020908102919091010152600101610ae8565b5083925090505b9250929050565b610b786118dc565b5060408051608081018252609b548152609c546020820152609d5491810191909152609e54606082015290565b7f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b44881565b600054610100900460ff1680610be25750610be2611378565b80610bf0575060005460ff16155b610c0c5760405162461bcd60e51b81526004016103dc90612197565b600054610100900460ff16158015610c37576000805460ff1961ff0019909116610100171660011790555b610c3f61137e565b610c47611411565b610c5260008561086e565b610c7c7f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b4488461086e565b610ca67f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c08361086e565b8015610cb8576000805461ff00191690555b50505050565b6000818152603360205260408120610a789061149d565b60655460ff1615610cf85760405162461bcd60e51b81526004016103dc9061213d565b610d006114a8565b6097548414610d215760405162461bcd60e51b81526004016103dc9061207f565b6098548314610d425760405162461bcd60e51b81526004016103dc90612167565b6099548214610d635760405162461bcd60e51b81526004016103dc90612351565b609a548114610d845760405162461bcd60e51b81526004016103dc9061220f565b6040805160808101825285815260208101859052808201849052606001829052609b859055609c849055609d839055609e829055517f3a7874586428776b9a79c3cec1d8c888d794976d633155ea9f3f7b0cb332094c906109dc908490879087908690611f0e565b7f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c081565b600082815260336020526040902060020154610e2e90610304611106565b6108ce5760405162461bcd60e51b81526004016103dc906120ed565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60a06020526000908152604090205481565b7f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a81565b600081815b8551811015610f36576000868281518110610ec057fe5b60200260200101519050808311610f01578281604051602001610ee4929190611db6565b604051602081830303815290604052805190602001209250610f2d565b8083604051602001610f14929190611db6565b6040516020818303038152906040528051906020012092505b50600101610ea9565b50831490505b9392505050565b6000610a7583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114ee565b600082820183811015610a755760405162461bcd60e51b81526004016103dc90612048565b6110008363a9059cbb60e01b8484604051602401610fc9929190611e53565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261151a565b505050565b600080836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561104157600080fd5b505afa158015611055573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110799190611ce1565b846001600160a01b0316633a98ef396040518163ffffffff1660e01b815260040160206040518083038186803b1580156110b257600080fd5b505afa1580156110c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ea9190611ce1565b816110f157fe5b0490508083816110fd57fe5b04949350505050565b3390565b600082815260336020526040902061112290826115a9565b156108785761112f611106565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260336020526040902061118b90826115be565b1561087857611198611106565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6112067f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a33610a7e565b6108e85760405162461bcd60e51b81526004016103dc906122cd565b60655460ff166112445760405162461bcd60e51b81526004016103dc90611fef565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611277611106565b6040516112849190611de0565b60405180910390a1565b6112b87f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b44833610a7e565b6108e85760405162461bcd60e51b81526004016103dc906121e5565b6112067f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a7e565b60655460ff16156113215760405162461bcd60e51b81526004016103dc9061213d565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611277611106565b6000610a7583836115d3565b6000610a75836001600160a01b038416611618565b303b1590565b600054610100900460ff16806113975750611397611378565b806113a5575060005460ff16155b6113c15760405162461bcd60e51b81526004016103dc90612197565b600054610100900460ff161580156113ec576000805460ff1961ff0019909116610100171660011790555b6113f4611630565b6113fc611630565b801561140e576000805461ff00191690555b50565b600054610100900460ff168061142a575061142a611378565b80611438575060005460ff16155b6114545760405162461bcd60e51b81526004016103dc90612197565b600054610100900460ff1615801561147f576000805460ff1961ff0019909116610100171660011790555b6065805460ff19169055801561140e576000805461ff001916905550565b6000610a78826116b1565b6114d27f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c033610a7e565b6108e85760405162461bcd60e51b81526004016103dc9061201d565b600081848411156115125760405162461bcd60e51b81526004016103dc9190611f4b565b505050900390565b606061156f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116b59092919063ffffffff16565b805190915015611000578080602001905181019061158d9190611c1d565b6110005760405162461bcd60e51b81526004016103dc9061237a565b6000610a75836001600160a01b0384166116cc565b6000610a75836001600160a01b038416611716565b815460009082106115f65760405162461bcd60e51b81526004016103dc90611f5e565b82600001828154811061160557fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b600054610100900460ff16806116495750611649611378565b80611657575060005460ff16155b6116735760405162461bcd60e51b81526004016103dc90612197565b600054610100900460ff161580156113fc576000805460ff1961ff001990911661010017166001179055801561140e576000805461ff001916905550565b5490565b60606116c484846000856117dc565b949350505050565b60006116d88383611618565b61170e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a78565b506000610a78565b600081815260018301602052604081205480156117d2578354600019808301919081019060009087908390811061174957fe5b906000526020600020015490508087600001848154811061176657fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061179657fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a78565b6000915050610a78565b6060824710156117fe5760405162461bcd60e51b81526004016103dc906120a7565b6118078561189d565b6118235760405162461bcd60e51b81526004016103dc906122f3565b60006060866001600160a01b031685876040516118409190611dc4565b60006040518083038185875af1925050503d806000811461187d576040519150601f19603f3d011682016040523d82523d6000602084013e611882565b606091505b50915091506118928282866118a3565b979650505050505050565b3b151590565b606083156118b2575081610f3c565b8251156118c25782518084602001fd5b8160405162461bcd60e51b81526004016103dc9190611f4b565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b0381168114610a7857600080fd5b60008083601f84011261192b578182fd5b50813567ffffffffffffffff811115611942578182fd5b6020830191508360208083028501011115610b6957600080fd5b60006020828403121561196d578081fd5b610a758383611903565b60008060408385031215611989578081fd5b6119938484611903565b91506119a28460208501611903565b90509250929050565b6000806000606084860312156119bf578081fd5b6119c98585611903565b92506119d88560208601611903565b91506119e78560408601611903565b90509250925092565b60008060408385031215611a02578182fd5b611a0c8484611903565b915060208084013567ffffffffffffffff811115611a28578283fd5b8401601f81018613611a38578283fd5b8035611a4b611a468261247b565b612454565b81815283810190838501858402850186018a1015611a67578687fd5b8694505b83851015611a9157611a7d8a82611903565b835260019490940193918501918501611a6b565b5080955050505050509250929050565b60008060008060008060008060a0898b031215611abc578384fd5b883567ffffffffffffffff80821115611ad3578586fd5b611adf8c838d0161191a565b909a50985060208b0135915080821115611af7578586fd5b611b038c838d0161191a565b909850965060408b0135915080821115611b1b578586fd5b50611b288b828c0161191a565b9095509350611b3c90508a60608b01611903565b9150608089013590509295985092959890939650565b600080600080600080600080600060a08a8c031215611b6f578081fd5b893567ffffffffffffffff80821115611b86578283fd5b611b928d838e0161191a565b909b50995060208c0135915080821115611baa578283fd5b611bb68d838e0161191a565b909950975060408c0135915080821115611bce578283fd5b611bda8d838e0161191a565b909750955060608c0135945060808c0135915080821115611bf9578283fd5b50611c068c828d0161191a565b915080935050809150509295985092959850929598565b600060208284031215611c2e578081fd5b81518015158114610a75578182fd5b600060208284031215611c4e578081fd5b5035919050565b60008060408385031215611c67578182fd5b8235915060208301356001600160a01b0381168114611c84578182fd5b809150509250929050565b60008060008060808587031215611ca4578384fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611cd2578182fd5b50508035926020909101359150565b600060208284031215611cf2578081fd5b5051919050565b815260200190565b6001600160a01b03169052565b60008284526020808501945082825b85811015611d4b578183016001600160a01b03611d3a8285611903565b168852968301969150600101611d1d565b509495945050505050565b81835260006001600160fb1b03831115611d6e578081fd5b6020830280836020870137939093016020019283525090919050565b60008151808452611da281602086016020860161249b565b601f01601f19169290920160200192915050565b918252602082015260400190565b60008251611dd681846020870161249b565b9190910192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038a16825288602083015260a06040830152611e1c60a08301888a611d0e565b8281036060840152611e2f818789611d56565b90508281036080840152611e44818587611d56565b9b9a5050505050505050505050565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b82811015611eac57611e9c848351611d01565b9284019290840190600101611e89565b50505083810382850152808551611ec38184611f05565b91508387019250845b81811015611eed57611edf838551611cf9565b938501939250600101611ecc565b5090979650505050505050565b901515815260200190565b90815260200190565b93845260208401929092526040830152606082015260800190565b600060408252611f3c6040830185611d8a565b90508260208301529392505050565b600060208252610a756020830184611d8a565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b60208082526011908201527037b7363ca937b7ba2b30b634b230ba37b960791b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201526d125b98dbdc9c9958dd081c9bdbdd60921b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602080825260169082015275092dcc6dee4e4cac6e840c6dedce8cadce840d0c2e6d60531b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526010908201526f37b7363ca937b7ba283937b837b9b2b960811b604082015260600190565b60208082526019908201527f496e636f7272656374206379636c6520656e6420626c6f636b00000000000000604082015260600190565b6020808252600d908201526c496e76616c6964206379636c6560981b604082015260600190565b60208082526017908201527f436c61696d656420616d6f756e74206d69736d61746368000000000000000000604082015260600190565b6020808252600f908201526e45786365737369766520636c61696d60881b604082015260600190565b6020808252600c908201526b37b7363ca3bab0b93234b0b760a11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b6020808252600f908201526e496e636f7272656374206379636c6560881b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561247357600080fd5b604052919050565b600067ffffffffffffffff821115612491578081fd5b5060209081020190565b60005b838110156124b657818101518382015260200161249e565b83811115610cb8575050600091015256fea26469706673582212205fd11d30ebe9e0b2c0441227a5737658b1478caefb2dfdfa3b79273deb01d76a64736f6c634300060c0033";
