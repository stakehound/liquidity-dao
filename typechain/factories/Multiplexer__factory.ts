/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Multiplexer } from "../Multiplexer";

export class Multiplexer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Multiplexer> {
    return super.deploy(overrides || {}) as Promise<Multiplexer>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Multiplexer {
    return super.attach(address) as Multiplexer;
  }
  connect(signer: Signer): Multiplexer__factory {
    return super.connect(signer) as Multiplexer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multiplexer {
    return new Contract(address, _abi, signerOrProvider) as Multiplexer;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "InsufficientFundsForRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "RootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "RootValidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_PROPOSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_VALIDATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNPAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "approveRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
    ],
    name: "encodeClaim",
    outputs: [
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getClaimedFor",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentMerkleData",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Multiplexer.MerkleData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingMerkleData",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "contentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
        ],
        internalType: "struct Multiplexer.MerkleData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasPendingRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialProposer",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialValidator",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProposedMerkleData",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPublishedMerkleData",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "proposeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806391d14854116100f9578063ca15c87311610097578063d547741f11610071578063d547741f14610383578063e63ab1e914610396578063ef5d9ae81461039e578063fb1bb9de146103b1576101c4565b8063ca15c87314610355578063cbf2218914610368578063d12ed8971461037b576101c4565b8063b20cd555116100d3578063b20cd55514610311578063b52086ee14610319578063c0c53b8b14610321578063c63463b414610334576101c4565b806391d14854146102d5578063a217fddf146102e8578063a2fcfd68146102f0576101c4565b806342a9b9c6116101665780636ed789f4116101405780636ed789f4146102925780638456cb59146102a5578063897347bb146102ad5780639010d07c146102b5576101c4565b806342a9b9c61461025f5780635634961d146102775780635c975abb1461028a576101c4565b80632f2ff15d116101a25780632f2ff15d1461021a5780632f37a7741461022f57806336568abe146102445780633f4ba83a14610257576101c4565b80630c9cbf0e146101c95780630d4202ce146101f2578063248a9ca314610207575b600080fd5b6101dc6101d736600461176f565b6103b9565b6040516101e99190611c8b565b60405180910390f35b6101fa6103d6565b6040516101e991906120fb565b6101dc6102153660046119e2565b61040b565b61022d6102283660046119fa565b610420565b005b610237610471565b6040516101e99190611c80565b61022d6102523660046119fa565b61048b565b61022d6104cd565b6102676104df565b6040516101e99493929190611c94565b61022d610285366004611a29565b6104ee565b6102376105df565b61022d6102a0366004611922565b6105e8565b61022d6109f4565b610267610a04565b6102c86102c3366004611a5a565b610a13565b6040516101e99190611b7d565b6102376102e33660046119fa565b610a34565b6101dc610a4c565b6103036102fe3660046117e8565b610a51565b6040516101e9929190611bf2565b6101fa610b26565b6101dc610b5b565b61022d61032f3660046117a3565b610b7f565b610347610342366004611899565b610c74565b6040516101e9929190611caf565b6101dc6103633660046119e2565b610cb9565b61022d610376366004611a29565b610cd0565b6101dc610de7565b61022d6103913660046119fa565b610e0b565b6101dc610e45565b6101dc6103ac366004611754565b610e69565b6101dc610e7b565b609f60209081526000928352604080842090915290825290205481565b6103de6116d4565b50604080516080810182526097548152609854602082015260995491810191909152609a54606082015290565b60009081526033602052604090206002015490565b60008281526033602052604090206002015461043e906102e3610e9f565b6104635760405162461bcd60e51b815260040161045a90611d26565b60405180910390fd5b61046d8282610ea3565b5050565b609d54600090610482906001610f0c565b60995414905090565b610493610e9f565b6001600160a01b0316816001600160a01b0316146104c35760405162461bcd60e51b815260040161045a906120ac565b61046d8282610f31565b6104d5610f9a565b6104dd610fe0565b565b609754609854609954609a5484565b60655460ff16156105115760405162461bcd60e51b815260040161045a90611ea6565b61051961104c565b609d54610527906001610f0c565b82146105455760405162461bcd60e51b815260040161045a90612083565b601e6105514383611092565b101580156105605750609a5481115b61056957600080fd5b6040805160808101825285815260208101859052808201849052606001829052609785905560988490556099839055609a829055517f4f5e6379f7e52c1faee63fa2c3adaf4a671bdb2b34c1a1a3f79b6681bb255e7f906105d1908490879087908690611c94565b60405180910390a150505050565b60655460ff1690565b60655460ff161561060b5760405162461bcd60e51b815260040161045a90611ea6565b609d54831461062c5760405162461bcd60e51b815260040161045a90611faf565b600033848989898960405160200161064996959493929190611baa565b6040516020818303038152906040528051906020012090506106a283838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050609b5491508490506110d4565b6106be5760405162461bcd60e51b815260040161045a9061205c565b60005b878110156109e957336000908152609f6020526040812061074090828c8c868181106106e957fe5b90506020020160208101906106fe9190611754565b6001600160a01b03166001600160a01b031681526020019081526020016000205489898581811061072b57fe5b9050602002013561109290919063ffffffff16565b9050600081116107625760405162461bcd60e51b815260040161045a9061200d565b336000908152609f602052604081206107b9918391908d8d8781811061078457fe5b90506020020160208101906107999190611754565b6001600160a01b0316815260208101919091526040016000205490610f0c565b336000908152609f60205260408120908c8c868181106107d557fe5b90506020020160208101906107ea9190611754565b6001600160a01b0316815260208101919091526040016000205587878381811061081057fe5b336000908152609f60209081526040822092029390930135929091508c8c8681811061083857fe5b905060200201602081019061084d9190611754565b6001600160a01b03166001600160a01b03168152602001908152602001600020541461088b5760405162461bcd60e51b815260040161045a90611fd6565b89898381811061089757fe5b90506020020160208101906108ac9190611754565b6001600160a01b031663a9059cbb336108e58d8d878181106108ca57fe5b90506020020160208101906108df9190611754565b85611171565b6040518363ffffffff1660e01b8152600401610902929190611b91565b602060405180830381600087803b15801561091c57600080fd5b505af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095491906119c2565b6109705760405162461bcd60e51b815260040161045a90611da3565b858a8a8481811061097d57fe5b90506020020160208101906109929190611754565b6001600160a01b0316336001600160a01b03167f6f9c9826be5976f3f82a3490c52a83328ce2ec7be9e62dcb39c26da5148d7c768442436040516109d893929190612126565b60405180910390a4506001016106c1565b505050505050505050565b6109fc611272565b6104dd61129c565b609b54609c54609d54609e5484565b6000828152603360205260408120610a2b90836112f5565b90505b92915050565b6000828152603360205260408120610a2b9083611301565b600081565b6060806060835167ffffffffffffffff81118015610a6e57600080fd5b50604051908082528060200260200182016040528015610a98578160200160208202803683370190505b50905060005b8451811015610b18576001600160a01b0386166000908152609f602052604081208651909190879084908110610ad057fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b0557fe5b6020908102919091010152600101610a9e565b5083925090505b9250929050565b610b2e6116d4565b5060408051608081018252609b548152609c546020820152609d5491810191909152609e54606082015290565b7f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b44881565b600054610100900460ff1680610b985750610b98611316565b80610ba6575060005460ff16155b610bc25760405162461bcd60e51b815260040161045a90611f00565b600054610100900460ff16158015610bed576000805460ff1961ff0019909116610100171660011790555b610bf561131c565b610bfd6113af565b610c08600085610463565b610c327f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b44884610463565b610c5c7f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c083610463565b8015610c6e576000805461ff00191690555b50505050565b60606000838389898989604051602001610c9396959493929190611baa565b604051602081830303815290604052915081805190602001209050965096945050505050565b6000818152603360205260408120610a2e9061143b565b60655460ff1615610cf35760405162461bcd60e51b815260040161045a90611ea6565b610cfb611446565b6097548414610d1c5760405162461bcd60e51b815260040161045a90611e2e565b6098548314610d3d5760405162461bcd60e51b815260040161045a90611ed0565b6099548214610d5e5760405162461bcd60e51b815260040161045a90612083565b609a548114610d7f5760405162461bcd60e51b815260040161045a90611f78565b6040805160808101825285815260208101859052808201849052606001829052609b859055609c849055609d839055609e829055517f3a7874586428776b9a79c3cec1d8c888d794976d633155ea9f3f7b0cb332094c906105d1908490879087908690611c94565b7f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c081565b600082815260336020526040902060020154610e29906102e3610e9f565b6104c35760405162461bcd60e51b815260040161045a90611e56565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60a06020526000908152604090205481565b7f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a81565b3390565b6000828152603360205260409020610ebb908261148c565b1561046d57610ec8610e9f565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082820183811015610a2b5760405162461bcd60e51b815260040161045a90611df7565b6000828152603360205260409020610f4990826114a1565b1561046d57610f56610e9f565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b610fc47f427da25fe773164f88948d3e215c94b6554e2ed5e5f203a821c9f2f6131cf75a33610a34565b6104dd5760405162461bcd60e51b815260040161045a90612036565b60655460ff166110025760405162461bcd60e51b815260040161045a90611d75565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611035610e9f565b6040516110429190611b7d565b60405180910390a1565b6110767f64ba955c8b5b448b2248fa0532807b98b1b75941bbd2184ca97df4881a13b44833610a34565b6104dd5760405162461bcd60e51b815260040161045a90611f4e565b6000610a2b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506114b6565b600081815b85518110156111665760008682815181106110f057fe5b60200260200101519050808311611131578281604051602001611114929190611b6f565b60405160208183030381529060405280519060200120925061115d565b8083604051602001611144929190611b6f565b6040516020818303038152906040528051906020012092505b506001016110d9565b509092149392505050565b600080836001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ad57600080fd5b505afa1580156111c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e59190611a7b565b846001600160a01b0316633a98ef396040518163ffffffff1660e01b815260040160206040518083038186803b15801561121e57600080fd5b505afa158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190611a7b565b8161125d57fe5b04905080838161126957fe5b04949350505050565b610fc47f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610a34565b60655460ff16156112bf5760405162461bcd60e51b815260040161045a90611ea6565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611035610e9f565b6000610a2b83836114e2565b6000610a2b836001600160a01b038416611527565b303b1590565b600054610100900460ff16806113355750611335611316565b80611343575060005460ff16155b61135f5760405162461bcd60e51b815260040161045a90611f00565b600054610100900460ff1615801561138a576000805460ff1961ff0019909116610100171660011790555b61139261153f565b61139a61153f565b80156113ac576000805461ff00191690555b50565b600054610100900460ff16806113c857506113c8611316565b806113d6575060005460ff16155b6113f25760405162461bcd60e51b815260040161045a90611f00565b600054610100900460ff1615801561141d576000805460ff1961ff0019909116610100171660011790555b6065805460ff1916905580156113ac576000805461ff001916905550565b6000610a2e826115c0565b6114707f2650881bae229064abd4495ca56feba9ce572f8653a1aad517d81f9e3cf174c033610a34565b6104dd5760405162461bcd60e51b815260040161045a90611dcc565b6000610a2b836001600160a01b0384166115c4565b6000610a2b836001600160a01b03841661160e565b600081848411156114da5760405162461bcd60e51b815260040161045a9190611cd1565b505050900390565b815460009082106115055760405162461bcd60e51b815260040161045a90611ce4565b82600001828154811061151457fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b600054610100900460ff16806115585750611558611316565b80611566575060005460ff16155b6115825760405162461bcd60e51b815260040161045a90611f00565b600054610100900460ff1615801561139a576000805460ff1961ff00199091166101001716600117905580156113ac576000805461ff001916905550565b5490565b60006115d08383611527565b61160657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a2e565b506000610a2e565b600081815260018301602052604081205480156116ca578354600019808301919081019060009087908390811061164157fe5b906000526020600020015490508087600001848154811061165e57fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061168e57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a2e565b6000915050610a2e565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b0381168114610a2e57600080fd5b60008083601f840112611723578182fd5b50813567ffffffffffffffff81111561173a578182fd5b6020830191508360208083028501011115610b1f57600080fd5b600060208284031215611765578081fd5b610a2b83836116fb565b60008060408385031215611781578081fd5b61178b84846116fb565b915061179a84602085016116fb565b90509250929050565b6000806000606084860312156117b7578081fd5b6117c185856116fb565b92506117d085602086016116fb565b91506117df85604086016116fb565b90509250925092565b600080604083850312156117fa578182fd5b61180484846116fb565b915060208084013567ffffffffffffffff811115611820578283fd5b8401601f81018613611830578283fd5b803561184361183e82612163565b61213c565b81815283810190838501858402850186018a101561185f578687fd5b8694505b83851015611889576118758a826116fb565b835260019490940193918501918501611863565b5080955050505050509250929050565b600080600080600080608087890312156118b1578182fd5b863567ffffffffffffffff808211156118c8578384fd5b6118d48a838b01611712565b909850965060208901359150808211156118ec578384fd5b506118f989828a01611712565b909550935050604087013561190d81612183565b80925050606087013590509295509295509295565b60008060008060008060006080888a03121561193c578081fd5b873567ffffffffffffffff80821115611953578283fd5b61195f8b838c01611712565b909950975060208a0135915080821115611977578283fd5b6119838b838c01611712565b909750955060408a0135945060608a01359150808211156119a2578283fd5b506119af8a828b01611712565b989b979a50959850939692959293505050565b6000602082840312156119d3578081fd5b81518015158114610a2b578182fd5b6000602082840312156119f3578081fd5b5035919050565b60008060408385031215611a0c578182fd5b823591506020830135611a1e81612183565b809150509250929050565b60008060008060808587031215611a3e578384fd5b5050823594602084013594506040840135936060013592509050565b60008060408385031215611a6c578182fd5b50508035926020909101359150565b600060208284031215611a8c578081fd5b5051919050565b815260200190565b6001600160a01b03169052565b60008284526020808501945082825b85811015611ae5578183016001600160a01b03611ad482856116fb565b168852968301969150600101611ab7565b509495945050505050565b81835260006001600160fb1b03831115611b08578081fd5b6020830280836020870137939093016020019283525090919050565b60008151808452815b81811015611b4957602081850181015186830182015201611b2d565b81811115611b5a5782602083870101525b50601f01601f19169290920160200192915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038816825286602083015260806040830152611bd2608083018688611aa8565b8281036060840152611be5818587611af0565b9998505050505050505050565b604080825283519082018190526000906020906060840190828701845b82811015611c3257611c22848351611a9b565b9284019290840190600101611c0f565b50505083810382850152808551611c498184611c8b565b91508387019250845b81811015611c7357611c65838551611a93565b938501939250600101611c52565b5090979650505050505050565b901515815260200190565b90815260200190565b93845260208401929092526040830152606082015260800190565b600060408252611cc26040830185611b24565b90508260208301529392505050565b600060208252610a2b6020830184611b24565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252602f908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526e0818591b5a5b881d1bc819dc985b9d608a1b606082015260800190565b60208082526014908201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b60208082526011908201527037b7363ca937b7ba2b30b634b230ba37b960791b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252600e908201526d125b98dbdc9c9958dd081c9bdbdd60921b604082015260600190565b60208082526030908201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60408201526f2061646d696e20746f207265766f6b6560801b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b602080825260169082015275092dcc6dee4e4cac6e840c6dedce8cadce840d0c2e6d60531b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526010908201526f37b7363ca937b7ba283937b837b9b2b960811b604082015260600190565b60208082526019908201527f496e636f7272656374206379636c6520656e6420626c6f636b00000000000000604082015260600190565b6020808252600d908201526c496e76616c6964206379636c6560981b604082015260600190565b60208082526017908201527f436c61696d656420616d6f756e74206d69736d61746368000000000000000000604082015260600190565b6020808252600f908201526e45786365737369766520636c61696d60881b604082015260600190565b6020808252600c908201526b37b7363ca3bab0b93234b0b760a11b604082015260600190565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b6020808252600f908201526e496e636f7272656374206379636c6560881b604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561215b57600080fd5b604052919050565b600067ffffffffffffffff821115612179578081fd5b5060209081020190565b6001600160a01b03811681146113ac57600080fdfea2646970667358221220d90774573bf81e022e6ba40bbee84bf8bef1e56d61d108bebf547b5ec92172a464736f6c634300060c0033";
