/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockToken } from "../MockToken";

export class MockToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockToken> {
    return super.deploy(overrides || {}) as Promise<MockToken>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac146103c9578063a457c2d7146103f5578063a9059cbb14610421578063dd62ed3e1461044d576100ea565b806370a08231146102745780637fbbe46f1461029a57806395d89b41146103c1576100ea565b806323b872dd116100c857806323b872dd146101c6578063313ce567146101fc578063395093511461021a57806340c10f1914610246576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761047b565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b038135169060200135610511565b604080519115158252519081900360200190f35b6101b461052e565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610534565b6102046105bb565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561023057600080fd5b506001600160a01b0381351690602001356105c4565b6102726004803603604081101561025c57600080fd5b506001600160a01b038135169060200135610612565b005b6101b46004803603602081101561028a57600080fd5b50356001600160a01b0316610620565b610272600480360360408110156102b057600080fd5b8101906020810181356401000000008111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460208302840111640100000000831117156102ff57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561034f57600080fd5b82018360208201111561036157600080fd5b8035906020019184602083028401116401000000008311171561038357600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061063b945050505050565b6100f76107bc565b610272600480360360408110156103df57600080fd5b506001600160a01b03813516906020013561081d565b6101986004803603604081101561040b57600080fd5b506001600160a01b038135169060200135610827565b6101986004803603604081101561043757600080fd5b506001600160a01b03813516906020013561088f565b6101b46004803603604081101561046357600080fd5b506001600160a01b03813581169160200135166108a3565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b600061052561051e6108ce565b84846108d2565b50600192915050565b60355490565b60006105418484846109be565b6105b18461054d6108ce565b6105ac856040518060600160405280602881526020016111c7602891396001600160a01b038a1660009081526034602052604081209061058b6108ce565b6001600160a01b031681526020810191909152604001600020549190610b1b565b6108d2565b5060019392505050565b60385460ff1690565b60006105256105d16108ce565b846105ac85603460006105e26108ce565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610bb2565b61061c8282610c13565b5050565b6001600160a01b031660009081526033602052604090205490565b600054610100900460ff16806106545750610654610d05565b80610662575060005460ff16155b61069d5760405162461bcd60e51b815260040180806020018281038252602e815260200180611199602e913960400191505060405180910390fd5b600054610100900460ff161580156106c8576000805460ff1961ff0019909116610100171660011790555b61070a604051806040016040528060048152602001634d6f636b60e01b815250604051806040016040528060048152602001634d6f636b60e01b815250610d0b565b8151835114610760576040805162461bcd60e51b815260206004820152601f60248201527f436f6e7374727563746f722061727261792073697a65206d69736d6174636800604482015290519081900360640190fd5b60005b83518110156107a45761079c84828151811061077b57fe5b602002602001015184838151811061078f57fe5b6020026020010151610c13565b600101610763565b5080156107b7576000805461ff00191690555b505050565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105075780601f106104dc57610100808354040283529160200191610507565b61061c8282610dc0565b60006105256108346108ce565b846105ac85604051806060016040528060258152602001611259602591396034600061085e6108ce565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610b1b565b600061052561089c6108ce565b84846109be565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166109175760405162461bcd60e51b81526004018080602001828103825260248152602001806112356024913960400191505060405180910390fd5b6001600160a01b03821661095c5760405162461bcd60e51b81526004018080602001828103825260228152602001806111516022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a035760405162461bcd60e51b81526004018080602001828103825260258152602001806112106025913960400191505060405180910390fd5b6001600160a01b038216610a485760405162461bcd60e51b815260040180806020018281038252602381526020018061110c6023913960400191505060405180910390fd5b610a538383836107b7565b610a9081604051806060016040528060268152602001611173602691396001600160a01b0386166000908152603360205260409020549190610b1b565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610abf9082610bb2565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610baa5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b6f578181015183820152602001610b57565b50505050905090810190601f168015610b9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610c0c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610c6e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610c7a600083836107b7565b603554610c879082610bb2565b6035556001600160a01b038216600090815260336020526040902054610cad9082610bb2565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b303b1590565b600054610100900460ff1680610d245750610d24610d05565b80610d32575060005460ff16155b610d6d5760405162461bcd60e51b815260040180806020018281038252602e815260200180611199602e913960400191505060405180910390fd5b600054610100900460ff16158015610d98576000805460ff1961ff0019909116610100171660011790555b610da0610ebc565b610daa8383610f5e565b80156107b7576000805461ff0019169055505050565b6001600160a01b038216610e055760405162461bcd60e51b81526004018080602001828103825260218152602001806111ef6021913960400191505060405180910390fd5b610e11826000836107b7565b610e4e8160405180606001604052806022815260200161112f602291396001600160a01b0385166000908152603360205260409020549190610b1b565b6001600160a01b038316600090815260336020526040902055603554610e749082611036565b6035556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600054610100900460ff1680610ed55750610ed5610d05565b80610ee3575060005460ff16155b610f1e5760405162461bcd60e51b815260040180806020018281038252602e815260200180611199602e913960400191505060405180910390fd5b600054610100900460ff16158015610f49576000805460ff1961ff0019909116610100171660011790555b8015610f5b576000805461ff00191690555b50565b600054610100900460ff1680610f775750610f77610d05565b80610f85575060005460ff16155b610fc05760405162461bcd60e51b815260040180806020018281038252602e815260200180611199602e913960400191505060405180910390fd5b600054610100900460ff16158015610feb576000805460ff1961ff0019909116610100171660011790555b8251610ffe906036906020860190611078565b508151611012906037906020850190611078565b506038805460ff1916601217905580156107b7576000805461ff0019169055505050565b6000610c0c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b1b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110b957805160ff19168380011785556110e6565b828001600101855582156110e6579182015b828111156110e65782518255916020019190600101906110cb565b506110f29291506110f6565b5090565b5b808211156110f257600081556001016110f756fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122014b0c0418350092ca7f256a0981d3dd3b586ed981820ffd51d15a01bf1a4a7d364736f6c634300060c0033";
