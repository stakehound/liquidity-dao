/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { EthGifter } from "../EthGifter";

export class EthGifter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<EthGifter> {
    return super.deploy(overrides || {}) as Promise<EthGifter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthGifter {
    return super.attach(address) as EthGifter;
  }
  connect(signer: Signer): EthGifter__factory {
    return super.connect(signer) as EthGifter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthGifter {
    return new Contract(address, _abi, signerOrProvider) as EthGifter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060d48061001f6000396000f3fe608060405260043610601f5760003560e01c80631260b97e14602a576025565b36602557005b600080fd5b605360048036036020811015603e57600080fd5b81019080803590602001909291905050506055565b005b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015609a573d6000803e3d6000fd5b505056fea264697066735822122056c130880b21a84d4c47fc0af5b43b72e7e06ebca69f6872965968c68d9b544964736f6c634300060c0033";
