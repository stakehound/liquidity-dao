/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ForceEther } from "../ForceEther";

export class ForceEther__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ForceEther> {
    return super.deploy(overrides || {}) as Promise<ForceEther>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ForceEther {
    return super.attach(address) as ForceEther;
  }
  connect(signer: Signer): ForceEther__factory {
    return super.connect(signer) as ForceEther__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForceEther {
    return new Contract(address, _abi, signerOrProvider) as ForceEther;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "forceSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50609d8061001e6000396000f3fe608060405260043610601f5760003560e01c8063f2adf1cb14602a576025565b36602557005b600080fd5b348015603557600080fd5b50605960048036036020811015604a57600080fd5b50356001600160a01b0316605b565b005b806001600160a01b0316fffea2646970667358221220d988516335ba5f52690bc7ec8706ce7a52761594313a6c244916605f82a568ac64736f6c634300060c0033";
