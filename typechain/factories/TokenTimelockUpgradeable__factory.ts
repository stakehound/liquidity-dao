/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenTimelockUpgradeable } from "../TokenTimelockUpgradeable";

export class TokenTimelockUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TokenTimelockUpgradeable> {
    return super.deploy(overrides || {}) as Promise<TokenTimelockUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenTimelockUpgradeable {
    return super.attach(address) as TokenTimelockUpgradeable;
  }
  connect(signer: Signer): TokenTimelockUpgradeable__factory {
    return super.connect(signer) as TokenTimelockUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTimelockUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenTimelockUpgradeable;
  }
}

const _abi = [
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releaseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107a2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806338af3eed1461005157806386d1a69f14610085578063b91d40011461008f578063fc0c546a146100ad575b600080fd5b6100596100e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61008d61010b565b005b6100976102f8565b6040518082815260200191505060405180910390f35b6100b5610302565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600254421015610166576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806106ee6032913960400191505060405180910390fd5b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d602081101561021a57600080fd5b8101908080519060200190929190505050905060008111610286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061074a6023913960400191505060405180910390fd5b6102f5600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661032b9092919063ffffffff16565b50565b6000600254905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103c88363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103cd565b505050565b606061042f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104bc9092919063ffffffff16565b90506000815111156104b75780806020019051602081101561045057600080fd5b81019080805190602001909291905050506104b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610720602a913960400191505060405180910390fd5b5b505050565b60606104cb84846000856104d4565b90509392505050565b60606104df856106da565b610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106105a1578051825260208201915060208101905060208303925061057e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610603576040519150601f19603f3d011682016040523d82523d6000602084013e610608565b606091505b5091509150811561061d5780925050506106d2565b6000815111156106305780518082602001fd5b836040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561069757808201518184015260208101905061067c565b50505050905090810190601f1680156106c45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b949350505050565b600080823b90506000811191505091905056fe546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206265666f72652072656c656173652074696d655361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564546f6b656e54696d656c6f636b3a206e6f20746f6b656e7320746f2072656c65617365a2646970667358221220b5d3bb83c5d7690597b6d0e08a9b9e4dc6f7ae36bdd44606697ecd93e5d3ce2864736f6c634300060c0033";
