/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakingMock } from "../StakingMock";

export class StakingMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StakingMock> {
    return super.deploy(overrides || {}) as Promise<StakingMock>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingMock {
    return super.attach(address) as StakingMock;
  }
  connect(signer: Signer): StakingMock__factory {
    return super.connect(signer) as StakingMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingMock {
    return new Contract(address, _abi, signerOrProvider) as StakingMock;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "stakingToken_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110f2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a694fc3a11610066578063a694fc3a146102bf578063a9059cbb146102dc578063c4d66de814610308578063dd62ed3e1461032e576100ea565b806370a082311461026557806395d89b411461028b578063a457c2d714610293576100ea565b806323b872dd116100c857806323b872dd146101c65780632e17de78146101fc578063313ce5671461021b5780633950935114610239576100ea565b806306fdde03146100ef578063095ea7b31461016c57806318160ddd146101ac575b600080fd5b6100f761035c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610131578181015183820152602001610119565b50505050905090810190601f16801561015e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101986004803603604081101561018257600080fd5b506001600160a01b0381351690602001356103f2565b604080519115158252519081900360200190f35b6101b461040f565b60408051918252519081900360200190f35b610198600480360360608110156101dc57600080fd5b506001600160a01b03813581169160208101359091169060400135610415565b6102196004803603602081101561021257600080fd5b503561049c565b005b610223610555565b6040805160ff9092168252519081900360200190f35b6101986004803603604081101561024f57600080fd5b506001600160a01b03813516906020013561055e565b6101b46004803603602081101561027b57600080fd5b50356001600160a01b03166105ac565b6100f76105c7565b610198600480360360408110156102a957600080fd5b506001600160a01b038135169060200135610628565b610219600480360360208110156102d557600080fd5b5035610690565b610198600480360360408110156102f257600080fd5b506001600160a01b038135169060200135610744565b6102196004803603602081101561031e57600080fd5b50356001600160a01b0316610758565b6101b46004803603604081101561034457600080fd5b506001600160a01b038135811691602001351661085a565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b5050505050905090565b60006104066103ff610885565b8484610889565b50600192915050565b60355490565b6000610422848484610975565b6104928461042e610885565b61048d85604051806060016040528060288152602001611027602891396001600160a01b038a1660009081526034602052604081209061046c610885565b6001600160a01b031681526020810191909152604001600020549190610ad2565b610889565b5060019392505050565b336000908152606660205260409020546104b69082610b69565b33600081815260666020908152604080832094909455606554845163a9059cbb60e01b815260048101949094526024840186905293516001600160a01b039094169363a9059cbb93604480820194918390030190829087803b15801561051b57600080fd5b505af115801561052f573d6000803e3d6000fd5b505050506040513d602081101561054557600080fd5b5061055290503382610bca565b50565b60385460ff1690565b600061040661056b610885565b8461048d856034600061057c610885565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610b69565b6001600160a01b031660009081526033602052604090205490565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e85780601f106103bd576101008083540402835291602001916103e8565b6000610406610635610885565b8461048d85604051806060016040528060258152602001611098602591396034600061065f610885565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610ad2565b336000908152606660205260409020546106aa9082610b69565b3360008181526066602090815260408083209490945560655484516323b872dd60e01b815260048101949094523060248501526044840186905293516001600160a01b03909416936323b872dd93606480820194918390030190829087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b505050506040513d602081101561073f57600080fd5b505050565b6000610406610751610885565b8484610975565b600054610100900460ff16806107715750610771610bd4565b8061077f575060005460ff16155b6107ba5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ff9602e913960400191505060405180910390fd5b600054610100900460ff161580156107e5576000805460ff1961ff0019909116610100171660011790555b610829604051806040016040528060078152602001665374616b696e6760c81b8152506040518060400160405280600381526020016253544b60e81b815250610bda565b606580546001600160a01b0319166001600160a01b0384161790558015610856576000805461ff00191690555b5050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108ce5760405162461bcd60e51b81526004018080602001828103825260248152602001806110746024913960400191505060405180910390fd5b6001600160a01b0382166109135760405162461bcd60e51b8152600401808060200182810382526022815260200180610fb16022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109ba5760405162461bcd60e51b815260040180806020018281038252602581526020018061104f6025913960400191505060405180910390fd5b6001600160a01b0382166109ff5760405162461bcd60e51b8152600401808060200182810382526023815260200180610f8e6023913960400191505060405180910390fd5b610a0a83838361073f565b610a4781604051806060016040528060268152602001610fd3602691396001600160a01b0386166000908152603360205260409020549190610ad2565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610a769082610b69565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b615760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b26578181015183820152602001610b0e565b50505050905090810190601f168015610b535780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610bc3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6108568282610c8f565b303b1590565b600054610100900460ff1680610bf35750610bf3610bd4565b80610c01575060005460ff16155b610c3c5760405162461bcd60e51b815260040180806020018281038252602e815260200180610ff9602e913960400191505060405180910390fd5b600054610100900460ff16158015610c67576000805460ff1961ff0019909116610100171660011790555b610c6f610d81565b610c798383610e22565b801561073f576000805461ff0019169055505050565b6001600160a01b038216610cea576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610cf66000838361073f565b603554610d039082610b69565b6035556001600160a01b038216600090815260336020526040902054610d299082610b69565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600054610100900460ff1680610d9a5750610d9a610bd4565b80610da8575060005460ff16155b610de35760405162461bcd60e51b815260040180806020018281038252602e815260200180610ff9602e913960400191505060405180910390fd5b600054610100900460ff16158015610e0e576000805460ff1961ff0019909116610100171660011790555b8015610552576000805461ff001916905550565b600054610100900460ff1680610e3b5750610e3b610bd4565b80610e49575060005460ff16155b610e845760405162461bcd60e51b815260040180806020018281038252602e815260200180610ff9602e913960400191505060405180910390fd5b600054610100900460ff16158015610eaf576000805460ff1961ff0019909116610100171660011790555b8251610ec2906036906020860190610efa565b508151610ed6906037906020850190610efa565b506038805460ff19166012179055801561073f576000805461ff0019169055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f3b57805160ff1916838001178555610f68565b82800160010185558215610f68579182015b82811115610f68578251825591602001919060010190610f4d565b50610f74929150610f78565b5090565b5b80821115610f745760008155600101610f7956fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206ae043c7f747a897208b6ac210a983ec0a6f66c64a284a6d3437872ba72a14ae64736f6c634300060c0033";
